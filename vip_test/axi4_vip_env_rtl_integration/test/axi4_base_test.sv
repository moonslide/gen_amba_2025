//==============================================================================
// AXI4 Base Test
// Generated by AMBA Bus Matrix Configuration Tool
// Date: 2025-07-29 09:33:31
//==============================================================================

class axi4_base_test extends uvm_test;
    
    `uvm_component_utils(axi4_base_test)
    
    // Environment instance
    axi4_env env;
    
    // Environment configuration
    axi4_env_config env_cfg;
    
    // Constructor
    function new(string name = "axi4_base_test", uvm_component parent = null);
        super.new(name, parent);
    endfunction
    
    // Build phase
    function void build_phase(uvm_phase phase);
        super.build_phase(phase);
        `uvm_info(get_type_name(), "Starting build_phase for AXI4 base test", UVM_LOW)
        
        // Create environment configuration
        env_cfg = axi4_env_config::type_id::create("env_cfg");
        `uvm_info(get_type_name(), "Created environment configuration", UVM_MEDIUM)
        
        // Initialize master and slave configurations
        env_cfg.no_of_masters = 8;
        env_cfg.no_of_slaves = 8;
        `uvm_info(get_type_name(), $sformatf("Configured %0d masters and %0d slaves", 
            env_cfg.no_of_masters, env_cfg.no_of_slaves), UVM_MEDIUM)
        
        // Set configuration
        uvm_config_db#(axi4_env_config)::set(this, "env*", "env_cfg", env_cfg);
        `uvm_info(get_type_name(), "Set environment configuration in config_db", UVM_HIGH)
        
        // Create environment
        env = axi4_env::type_id::create("env", this);
        `uvm_info(get_type_name(), "Created AXI4 environment", UVM_MEDIUM)
    endfunction
    
    // Start of simulation phase - control waveform dumping
    function void start_of_simulation_phase(uvm_phase phase);
        super.start_of_simulation_phase(phase);
        `uvm_info(get_type_name(), "=== AXI4 VIP TEST STARTING ===", UVM_NONE)
        `uvm_info(get_type_name(), $sformatf("Test: %s", get_type_name()), UVM_LOW)
        `uvm_info(get_type_name(), $sformatf("Simulation time: %0t", $time), UVM_MEDIUM)
        
        // Check for waveform control
        if ($test$plusargs("enable_wave")) begin
            `uvm_info(get_type_name(), "Enabling waveform dump", UVM_LOW)
            // Use direct system tasks instead of hierarchical reference
            `ifdef DUMP_FSDB
                $fsdbDumpon();
            `elsif DUMP_VCD
                $dumpon();
            `endif
        end
        
        if ($test$plusargs("disable_wave")) begin
            `uvm_info(get_type_name(), "Disabling waveform dump", UVM_LOW)
            // Use direct system tasks instead of hierarchical reference
            `ifdef DUMP_FSDB
                $fsdbDumpoff();
            `elsif DUMP_VCD
                $dumpoff();
            `endif
        end
    endfunction
    
    // End of elaboration phase
    function void end_of_elaboration_phase(uvm_phase phase);
        super.end_of_elaboration_phase(phase);
        uvm_top.print_topology();
    endfunction
    
    // Run phase
    task run_phase(uvm_phase phase);
        phase.raise_objection(this);
        `uvm_info(get_type_name(), "Starting base test", UVM_LOW)
        
        // Add test logic here
        #100ns;
        
        `uvm_info(get_type_name(), "Ending base test", UVM_LOW)
        phase.drop_objection(this);
    endtask
    
endclass : axi4_base_test
