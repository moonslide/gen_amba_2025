//==============================================================================
// AXI4 Base Test
// Generated by AMBA Bus Matrix Configuration Tool
// Date: 2025-08-06 17:07:31
//==============================================================================

class axi4_base_test extends uvm_test;
    
    `uvm_component_utils(axi4_base_test)
    
    // Environment instance
    axi4_env env;
    
    // Environment configuration
    axi4_env_config env_cfg;
    
    // Constructor
    function new(string name = "axi4_base_test", uvm_component parent = null);
        super.new(name, parent);
    endfunction
    
    // Build phase
    function void build_phase(uvm_phase phase);
        super.build_phase(phase);
        
        // Create environment configuration
        env_cfg = axi4_env_config::type_id::create("env_cfg");
        
        // Initialize master and slave configurations for 16x16 matrix
        env_cfg.no_of_masters = 16;
        env_cfg.no_of_slaves = 16;
        
        // Set configuration
        uvm_config_db#(axi4_env_config)::set(this, "env*", "env_cfg", env_cfg);
        
        // Create environment
        env = axi4_env::type_id::create("env", this);
    endfunction
    
    // Start of simulation phase
    function void start_of_simulation_phase(uvm_phase phase);
        super.start_of_simulation_phase(phase);
        
        if ($test$plusargs("enable_wave")) begin
            `uvm_info(get_type_name(), "Enabling waveform dump", UVM_LOW)
            `ifdef DUMP_FSDB
                $fsdbDumpon();
            `elsif DUMP_VCD
                $dumpon();
            `endif
        end
    endfunction
    
    // Run phase
    virtual task run_phase(uvm_phase phase);
        axi4_basic_virtual_seq vseq;
        `uvm_info(get_type_name(), "Starting test run phase", UVM_LOW)
        
        phase.raise_objection(this);
        
        // Create and start virtual sequence
        vseq = axi4_basic_virtual_seq::type_id::create("vseq");
        vseq.start(env.virtual_seqr);
        
        phase.drop_objection(this);
    endtask
    
endclass : axi4_base_test
