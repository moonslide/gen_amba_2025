//==============================================================================
// AXI4 Virtual Stress Sequence
// Generated by AMBA Bus Matrix Configuration Tool
// Date: 2025-08-05 14:57:06
//==============================================================================

class axi4_virtual_stress_seq extends axi4_virtual_base_seq;
    
    `uvm_object_utils(axi4_virtual_stress_seq)
    
    // Parameters
    int num_iterations = 100;
    bit enable_backpressure = 0;
    
    // Constructor
    function new(string name = "axi4_virtual_stress_seq");
        super.new(name);
    endfunction
    
    // Body method
    virtual task body();
        axi4_master_random_seq random_seq[8];
        
        `uvm_info(get_type_name(), "Starting virtual stress sequence", UVM_MEDIUM)
        
        // Start random sequences on all masters concurrently
        fork
            begin
                random_seq[0] = axi4_master_random_seq::type_id::create($sformatf("random_seq_%0d", 0));
                random_seq[0].num_trans = num_iterations;
                random_seq[0].start(p_sequencer.master_seqr[0]);
            end
            begin
                random_seq[1] = axi4_master_random_seq::type_id::create($sformatf("random_seq_%0d", 1));
                random_seq[1].num_trans = num_iterations;
                random_seq[1].start(p_sequencer.master_seqr[1]);
            end
            begin
                random_seq[2] = axi4_master_random_seq::type_id::create($sformatf("random_seq_%0d", 2));
                random_seq[2].num_trans = num_iterations;
                random_seq[2].start(p_sequencer.master_seqr[2]);
            end
            begin
                random_seq[3] = axi4_master_random_seq::type_id::create($sformatf("random_seq_%0d", 3));
                random_seq[3].num_trans = num_iterations;
                random_seq[3].start(p_sequencer.master_seqr[3]);
            end
            begin
                random_seq[4] = axi4_master_random_seq::type_id::create($sformatf("random_seq_%0d", 4));
                random_seq[4].num_trans = num_iterations;
                random_seq[4].start(p_sequencer.master_seqr[4]);
            end
            begin
                random_seq[5] = axi4_master_random_seq::type_id::create($sformatf("random_seq_%0d", 5));
                random_seq[5].num_trans = num_iterations;
                random_seq[5].start(p_sequencer.master_seqr[5]);
            end
            begin
                random_seq[6] = axi4_master_random_seq::type_id::create($sformatf("random_seq_%0d", 6));
                random_seq[6].num_trans = num_iterations;
                random_seq[6].start(p_sequencer.master_seqr[6]);
            end
            begin
                random_seq[7] = axi4_master_random_seq::type_id::create($sformatf("random_seq_%0d", 7));
                random_seq[7].num_trans = num_iterations;
                random_seq[7].start(p_sequencer.master_seqr[7]);
            end
        join
    endtask : body
    
endclass : axi4_virtual_stress_seq
