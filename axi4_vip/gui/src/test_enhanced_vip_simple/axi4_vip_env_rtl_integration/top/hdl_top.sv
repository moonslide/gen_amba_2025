//==============================================================================
// HDL Top Module - Enhanced with BFM connectivity
// Generated by AMBA Bus Matrix Configuration Tool
// Date: 2025-08-03 23:14:02
//==============================================================================

module hdl_top;
    
    import axi4_globals_pkg::*;
    import uvm_pkg::*;
    
    // Clock and reset
    logic aclk;
    logic aresetn;
    
    // Clock generation
    initial begin
        aclk = 0;
        forever #5ns aclk = ~aclk;
    end
    
    // Reset generation
    initial begin
        $display("[%0t] HDL_TOP: Asserting reset", $time);
        aresetn = 0;
        repeat(10) @(posedge aclk);
        $display("[%0t] HDL_TOP: De-asserting reset - System ready", $time);
        aresetn = 1;
    end
    
    // AXI4 interfaces
    axi4_if axi_if[NO_OF_MASTERS](aclk, aresetn);
    
    // Master agent BFMs
    axi4_master_agent_bfm master_bfm[NO_OF_MASTERS](aclk, aresetn);
    
    // Slave agent BFMs
    axi4_slave_agent_bfm slave_bfm[NO_OF_SLAVES](aclk, aresetn);
    
    // Connect BFMs to AXI interfaces
    genvar i;
    generate
        for (i = 0; i < NO_OF_MASTERS; i++) begin : master_bfm_connect
            axi4_master_bfm_connector #(
                .ADDR_WIDTH(ADDRESS_WIDTH),
                .DATA_WIDTH(DATA_WIDTH),
                .ID_WIDTH(ID_WIDTH)
            ) bfm_connector (
                .bfm(master_bfm[i]),
                .axi(axi_if[i])
            );
        end
    endgenerate
    
    // FSDB dumping
    `ifdef DUMP_FSDB
    initial begin
        string fsdb_file;
        if ($value$plusargs("fsdb_file=%s", fsdb_file)) begin
            $display("[%0t] HDL_TOP: Starting FSDB dump to %s", $time, fsdb_file);
            $fsdbDumpfile(fsdb_file);
        end else begin
            $display("[%0t] HDL_TOP: Starting FSDB dump to axi4_vip.fsdb", $time);
            $fsdbDumpfile("axi4_vip.fsdb");
        end
        $fsdbDumpvars(0, hdl_top, "+all");
        $fsdbDumpSVA();
        $fsdbDumpMDA();
        $fsdbDumpon();
        $display("[%0t] HDL_TOP: FSDB dumping enabled", $time);
    end
    `endif
    
    // VCD dumping (alternative)
    `ifdef DUMP_VCD
    initial begin
        $display("[%0t] Starting VCD dump", $time);
        $dumpfile("axi4_vip.vcd");
        $dumpvars(0, hdl_top);
        $dumpon();
    end
    `endif
    
    // Waveform control tasks
    task enable_wave_dump();
        `ifdef DUMP_FSDB
            $fsdbDumpon();
            $display("[%0t] FSDB dumping enabled", $time);
        `elsif DUMP_VCD
            $dumpon();
            $display("[%0t] VCD dumping enabled", $time);
        `else
            $display("[%0t] No waveform dumping configured. Use +define+DUMP_FSDB or +define+DUMP_VCD", $time);
        `endif
    endtask
    
    task disable_wave_dump();
        `ifdef DUMP_FSDB
            $fsdbDumpoff();
            $display("[%0t] FSDB dumping disabled", $time);
        `elsif DUMP_VCD
            $dumpoff();
            $display("[%0t] VCD dumping disabled", $time);
        `endif
    endtask
    
    // Dump control from plusargs
    initial begin
        string dump_file;
        if ($value$plusargs("fsdb_file=%s", dump_file)) begin
            `ifdef DUMP_FSDB
                $fsdbDumpfile(dump_file);
                $display("[%0t] FSDB file set to: %s", $time, dump_file);
            `endif
        end
    end
    
    // RTL DUT instance
    dut_wrapper #(
        .ADDR_WIDTH(ADDRESS_WIDTH),
        .DATA_WIDTH(DATA_WIDTH),
        .ID_WIDTH(ID_WIDTH)
    ) dut (
        .clk(aclk),
        .rst_n(aresetn),
        .axi_if(axi_if[0])  // Connect to first master interface
    );
    
    // Additional waveform dumping for DUT internals
    `ifdef DUMP_FSDB
    initial begin
        #1;  // Wait for DUT instantiation
        $fsdbDumpvars(0, dut, "+all");
        $display("[%0t] Added DUT internal signals to FSDB dump", $time);
    end
    `endif
    
    `ifdef DUMP_VCD  
    initial begin
        #1;  // Wait for DUT instantiation
        $dumpvars(0, dut);
        $display("[%0t] Added DUT internal signals to VCD dump", $time);
    end
    `endif
    
endmodule : hdl_top
