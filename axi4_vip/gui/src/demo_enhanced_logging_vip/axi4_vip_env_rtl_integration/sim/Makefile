#==============================================================================
# Makefile for AXI4 VIP Simulation
# Generated by AMBA Bus Matrix Configuration Tool
# Date: 2025-08-04 09:43:29
#==============================================================================

# Default simulator
SIM ?= vcs

# Test name
TEST ?= axi4_base_test

# Random seed
SEED ?= 1

# Directories
VIP_ROOT = ..
SIM_DIR = .
SCRIPT_DIR = $(SIM_DIR)/scripts
LOG_DIR = $(SIM_DIR)/logs
WAVE_DIR = $(SIM_DIR)/waves
COV_DIR = $(SIM_DIR)/coverage

# Export VIP_ROOT for use in compile file
export VIP_ROOT

# Create directories
$(shell mkdir -p $(LOG_DIR) $(WAVE_DIR) $(COV_DIR))

# Common compile options
COMMON_OPTS = +define+UVM_NO_DEPRECATED +define+UVM_OBJECT_MUST_HAVE_CONSTRUCTOR

# Waveform dump options
DUMP_FSDB ?= 0
DUMP_VCD ?= 0
FSDB_FILE ?= $(WAVE_DIR)/$(TEST)_$(SEED).fsdb
VCD_FILE ?= $(WAVE_DIR)/$(TEST)_$(SEED).vcd

# Add waveform defines
ifeq ($(DUMP_FSDB), 1)
    COMMON_OPTS += +define+DUMP_FSDB
    VERDI_HOME ?= /home/eda_tools/synopsys/verdi/W-2024.09-SP1
    VCS_COMP_OPTS += -P $(VERDI_HOME)/share/PLI/VCS/LINUX64/novas.tab $(VERDI_HOME)/share/PLI/VCS/LINUX64/pli.a
endif

ifeq ($(DUMP_VCD), 1)
    COMMON_OPTS += +define+DUMP_VCD
endif

# VCS options
VCS_COMP_OPTS = -full64 -sverilog -ntb_opts uvm-1.2 -timescale=1ns/1ps
VCS_COMP_OPTS += -debug_access+all +vcs+lic+wait -lca -kdb
VCS_COMP_OPTS += +lint=PCWM
VCS_COMP_OPTS += $(COMMON_OPTS)

VCS_RUN_OPTS = +UVM_TESTNAME=$(TEST) +UVM_VERBOSITY=UVM_MEDIUM
VCS_RUN_OPTS += +ntb_random_seed=$(SEED)

# Add FSDB runtime options
ifeq ($(DUMP_FSDB), 1)
    VCS_RUN_OPTS += +fsdb_file=$(FSDB_FILE)
endif

# Questa options
QUESTA_COMP_OPTS = -64 -sv -mfcu -cuname design_cuname
QUESTA_COMP_OPTS += +define+QUESTA
QUESTA_COMP_OPTS += $(COMMON_OPTS)

QUESTA_RUN_OPTS = +UVM_TESTNAME=$(TEST) +UVM_VERBOSITY=UVM_MEDIUM
QUESTA_RUN_OPTS += -sv_seed $(SEED)

# Targets
.PHONY: all compile run clean

all: run

compile:
ifeq ($(SIM), vcs)
	VIP_ROOT=$(VIP_ROOT) vcs $(VCS_COMP_OPTS) -f $(VIP_ROOT)/sim/axi4_compile.f -l $(LOG_DIR)/compile.log
else ifeq ($(SIM), questa)
	VIP_ROOT=$(VIP_ROOT) vlog $(QUESTA_COMP_OPTS) -f $(VIP_ROOT)/sim/axi4_compile.f -l $(LOG_DIR)/compile.log
endif

run: compile
ifeq ($(SIM), vcs)
	./simv $(VCS_RUN_OPTS) -l $(LOG_DIR)/$(TEST)_$(SEED).log
else ifeq ($(SIM), questa)
	vsim -c design_cuname.hvl_top design_cuname.hdl_top $(QUESTA_RUN_OPTS) -do "run -all; quit" -l $(LOG_DIR)/$(TEST)_$(SEED).log
endif

# Run with FSDB dumping
run_fsdb:
	$(MAKE) run DUMP_FSDB=1
	@echo "FSDB file generated: $(FSDB_FILE)"

# Run with VCD dumping
run_vcd:
	$(MAKE) run DUMP_VCD=1
	@echo "VCD file generated: $(VCD_FILE)"

# Open waveform in Verdi with auto-load last run
verdi:
	@echo "Auto-loading last run in Verdi..."
	@# Find the most recent FSDB file
	@LAST_FSDB=$$(ls -t $(WAVE_DIR)/*.fsdb 2>/dev/null | head -1); 	if [ -z "$$LAST_FSDB" ]; then 		echo "No FSDB files found. Run 'make run_fsdb' first."; 		exit 1; 	fi; 	echo "Loading FSDB: $$LAST_FSDB"; 	echo "Loading KDB: ./simv.daidir/kdb"; 	verdi -ssf $$LAST_FSDB -elab ./simv.daidir/kdb -nologo &

# Open waveform in DVE
dve:
	dve -vpd $(VCD_FILE) &

clean:
	rm -rf csrc simv* *.log ucli.key
	rm -rf work transcript vsim.wlf
	rm -rf $(LOG_DIR)/* $(WAVE_DIR)/* $(COV_DIR)/*

help:
	@echo "Usage: make [target] [options]"
	@echo "Targets:"
	@echo "  compile    - Compile the design"
	@echo "  run        - Compile and run simulation"
	@echo "  run_fsdb   - Run with FSDB dumping enabled"
	@echo "  run_vcd    - Run with VCD dumping enabled"
	@echo "  verdi      - Open FSDB in Verdi"
	@echo "  dve        - Open VCD in DVE"
	@echo "  clean      - Clean simulation files"
	@echo "Options:"
	@echo "  SIM=vcs      - Simulator (vcs, questa)"
	@echo "  TEST=test_name    - Test to run"
	@echo "  SEED=value        - Random seed"
	@echo "  DUMP_FSDB=1       - Enable FSDB dumping"
	@echo "  DUMP_VCD=1        - Enable VCD dumping"
	@echo "  FSDB_FILE=path    - FSDB output file"
	@echo "  VCD_FILE=path     - VCD output file"
