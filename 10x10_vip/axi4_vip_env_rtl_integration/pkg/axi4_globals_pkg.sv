//==============================================================================
// AXI4 Global Package
// Generated by AMBA Bus Matrix Configuration Tool
// Date: 2025-08-03 22:09:43
//==============================================================================

package axi4_globals_pkg;
    
    // Import UVM package
    import uvm_pkg::*;
    `include "uvm_macros.svh"
    
    // Global parameters from GUI configuration
    parameter NO_OF_MASTERS    = 10;
    parameter NO_OF_SLAVES     = 10;
    parameter ADDRESS_WIDTH    = 40;
    parameter DATA_WIDTH       = 128;
    parameter ID_WIDTH         = 8;  // Max of master ID widths: [6, 6, 8, 4, 4, 4, 4, 8, 4, 4]
    parameter STRB_WIDTH       = DATA_WIDTH/8;
    parameter USER_WIDTH       = 16;  // Max of master USER widths: [4, 4, 8, 0, 0, 0, 0, 16, 0, 0]
    
    // Slave memory configuration
    parameter SLAVE_MEMORY_SIZE = 12288;  // 12KB default
    parameter MEMORY_WIDTH      = 8;
    parameter SLAVE_MEMORY_DEPTH = SLAVE_MEMORY_SIZE/MEMORY_WIDTH;
    
    // Transaction types
    typedef enum bit [1:0] {
        FIXED = 2'b00,
        INCR  = 2'b01,
        WRAP  = 2'b10,
        RSVD  = 2'b11
    } axi4_burst_type_e;
    
    // Response types
    typedef enum bit [1:0] {
        OKAY   = 2'b00,
        EXOKAY = 2'b01,
        SLVERR = 2'b10,
        DECERR = 2'b11
    } axi4_response_type_e;
    
    // Lock types
    typedef enum bit {
        NORMAL    = 1'b0,
        EXCLUSIVE = 1'b1
    } axi4_lock_type_e;
    
    // Size encoding
    typedef enum bit [2:0] {
        SIZE_1B   = 3'b000,
        SIZE_2B   = 3'b001,
        SIZE_4B   = 3'b010,
        SIZE_8B   = 3'b011,
        SIZE_16B  = 3'b100,
        SIZE_32B  = 3'b101,
        SIZE_64B  = 3'b110,
        SIZE_128B = 3'b111
    } axi4_size_e;
    
    // Cache encoding
    typedef struct packed {
        bit allocate;
        bit other_allocate;
        bit modifiable;
        bit bufferable;
    } axi4_cache_t;
    
    // Protection encoding
    typedef struct packed {
        bit instruction;
        bit nonsecure;
        bit privileged;
    } axi4_prot_t;
    
    // Slave configuration from GUI
    typedef struct {
        string name;
        bit [ADDRESS_WIDTH-1:0] base_addr;
        bit [ADDRESS_WIDTH-1:0] end_addr;
        int memory_size;
    } slave_config_t;
    
    // Master configuration from GUI
    typedef struct {
        string name;
        int id_width;
        bit qos_support;
        bit exclusive_support;
    } master_config_t;
    
    // Generated configurations
    master_config_t master_configs[NO_OF_MASTERS] = '{
        '{"CPU_Cluster_0", 6, 1, 1},
        '{"CPU_Cluster_1", 6, 1, 1},
        '{"GPU", 8, 1, 0},
        '{"Video_Encoder", 4, 1, 0},
        '{"Video_Decoder", 4, 1, 0},
        '{"DMA_Engine_0", 4, 1, 0},
        '{"DMA_Engine_1", 4, 1, 0},
        '{"PCIe_Controller", 8, 1, 0},
        '{"Master0", 4, 1, 1},
        '{"Master1", 4, 1, 1}
    };

    slave_config_t slave_configs[NO_OF_SLAVES] = '{
        '{"DDR4_Channel_0", 'h0, 'h1FFFFFFFF, 64'd8589934592},
        '{"DDR4_Channel_1", 'h200000000, 'h3FFFFFFFF, 64'd8589934592},
        '{"L3_Cache_SRAM", 'h400000000, 'h400FFFFFF, 32'd16777216},
        '{"Boot_ROM", 'h1000000000, 'h100003FFFF, 32'd262144},
        '{"System_Registers", 'h2000000000, 'h200000FFFF, 32'd65536},
        '{"PCIe_Config_Space", 'h4000000000, 'h4003FFFFFF, 32'd67108864},
        '{"Crypto_Engine", 'h8000000000, 'h800003FFFF, 32'd262144},
        '{"Debug_APB_Bridge", 'h10000000000, 'h100000FFFFF, 32'd1048576},
        '{"Slave0", 'h20000000000, 'h200000FFFFF, 32'd1048576},
        '{"Slave1", 'h40000000000, 'h400000FFFFF, 32'd1048576}
    };

endpackage : axi4_globals_pkg
