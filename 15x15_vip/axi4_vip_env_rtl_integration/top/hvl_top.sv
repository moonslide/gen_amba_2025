//==============================================================================
// HVL Top Module
// Generated by AMBA Bus Matrix Configuration Tool
// Date: 2025-08-09 12:32:51
//==============================================================================

module hvl_top;
    
    import uvm_pkg::*;
    import axi4_test_pkg::*;
    
    initial begin
        `ifdef DUMP_FSDB
            // FSDB dumping using system tasks
            $fsdbDumpfile("waves/axi4_vip.fsdb");
            $fsdbDumpvars(0, hdl_top, "+all");
            $fsdbDumpvars(0, hvl_top, "+all");
            $display("[%0t] FSDB dumping enabled to waves/axi4_vip.fsdb", $time);
        `endif
        
        `ifdef DUMP_VCD
            // VCD dumping
            $dumpfile("waves/axi4_vip.vcd");
            $dumpvars(0, hdl_top);
            $dumpvars(0, hvl_top);
            $display("[%0t] VCD dumping enabled to waves/axi4_vip.vcd", $time);
        `endif
        
        // Pass interfaces to UVM environment via config_db
        // This is done here to avoid hierarchical references from package
        // Unrolled to avoid non-constant index errors
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "master_if_0", hdl_top.master_if[0]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "master_if_1", hdl_top.master_if[1]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "master_if_2", hdl_top.master_if[2]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "master_if_3", hdl_top.master_if[3]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "master_if_4", hdl_top.master_if[4]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "master_if_5", hdl_top.master_if[5]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "master_if_6", hdl_top.master_if[6]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "master_if_7", hdl_top.master_if[7]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "master_if_8", hdl_top.master_if[8]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "master_if_9", hdl_top.master_if[9]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "master_if_10", hdl_top.master_if[10]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "master_if_11", hdl_top.master_if[11]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "master_if_12", hdl_top.master_if[12]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "master_if_13", hdl_top.master_if[13]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "master_if_14", hdl_top.master_if[14]);
        
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "slave_if_0", hdl_top.slave_if[0]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "slave_if_1", hdl_top.slave_if[1]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "slave_if_2", hdl_top.slave_if[2]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "slave_if_3", hdl_top.slave_if[3]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "slave_if_4", hdl_top.slave_if[4]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "slave_if_5", hdl_top.slave_if[5]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "slave_if_6", hdl_top.slave_if[6]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "slave_if_7", hdl_top.slave_if[7]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "slave_if_8", hdl_top.slave_if[8]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "slave_if_9", hdl_top.slave_if[9]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "slave_if_10", hdl_top.slave_if[10]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "slave_if_11", hdl_top.slave_if[11]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "slave_if_12", hdl_top.slave_if[12]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "slave_if_13", hdl_top.slave_if[13]);
        uvm_config_db#(virtual axi4_if)::set(uvm_root::get(), "*", "slave_if_14", hdl_top.slave_if[14]);
        
        // Run UVM test
        run_test();
    end
    
endmodule : hvl_top
